name: Catch and Flow

on: [ push, pull_request ]

jobs:
  rustfmt:
    name: rustfmt check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - run: echo "date=$(date -d '1 month ago' +'%Y-%m-%d')" >> $GITHUB_ENV
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: nightly-${{ env.date }}
          components: rustfmt
      - uses: LoliGothick/rustfmt-check@master
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          toolchain: nightly-${{ env.date }}
          flags: --all
          args: --config-path=./.cargo-husky/hooks/rustfmt.toml

  deny:
    name: Run cargo-deny
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: EmbarkStudios/cargo-deny-action@v1
        with:
          rust-version: 1.70.0
          log-level: warn
          command: check
          arguments: --all-features

  test:
    needs: [ rustfmt ]
    name: "Test: { target: ${{ matrix.os }}, channel: ${{ matrix.rust }} }"
    runs-on: ${{matrix.os}}
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-latest, macos-latest, windows-latest ]
        rust: [ stable ]
        include:
          - os: ubuntu-latest
            target: unknown-linux-musl
            sccache:
              path: /home/runner/.cache/sccache
            exe: ""
          - os: macos-latest
            target: apple-darwin
            sccache:
              path: /Users/runner/Library/Caches/Mozilla.sccache
            exe: ""
          - os: windows-latest
            target: pc-windows-msvc
            sccache:
              path: /Users/runner/%LOCALAPPDATA%\Mozilla\sccache
            exe: ".exe"

    env:
      RUST_BACKTRACE: full
      RUSTV: ${{ matrix.rust }}
      SCCACHE_CACHE_SIZE: 2G
      SCCACHE_DIR: ${{ matrix.sccache-path }}
      SCCACHE_VERSION: 0.3.3
      # SCCACHE_RECACHE: 1 # Uncomment this to clear cache, then comment it back out

    steps:
      - uses: actions/checkout@v3

      - name: Setup Rust ${{ matrix.rust }}
        uses: dtolnay/rust-toolchain@stable

      - name: Cache cargo registry
        uses: actions/cache@v3
        continue-on-error: false
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git            
            ~/.cargo/registry/index/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-

      - name: Save sccache
        id: restore-sccache
        uses: actions/cache@v3
        continue-on-error: false
        with:
          path: |
            ${{ matrix.sccache.path }}
            ~/.cargo/bin/sccache${{ matrix.exe }}
          key: ${{ runner.os }}-sccache-${{ env.SCCACHE_VERSION }}-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-sccache-${{ env.SCCACHE_VERSION }}-

      - if: ${{ steps.restore-sccache.outputs.cache-hit == false }}
        name: Install sccache
        uses: dtolnay/rust-toolchain@stable
        with:
          command: install
          args: --version=${{ env.SCCACHE_VERSION }} --force sccache

      - name: Start sccache server
        run: sccache --start-server

      - name: Build
        uses: dtolnay/rust-toolchain@stable
        env:
          RUSTC_WRAPPER: sccache
        with:
          command: build

      - name: Run clippy
        uses: LoliGothick/clippy-check@master
        env:
          RUSTC_WRAPPER: sccache
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          deny: warnings

      - name: Run tests
        uses: dtolnay/rust-toolchain@stable
        env:
          RUSTC_WRAPPER: sccache
        with:
          command: test
          args: --all-features

      - name: Print sccache stats
        run: sccache --show-stats
      - name: Stop sccache server
        run: sccache --stop-server || true
