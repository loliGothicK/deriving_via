name: Catch and Flow

on: [ push, pull_request ]

jobs:
  rustfmt:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
      checks: write
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@nightly
        with:
          components: rustfmt
      - uses: LoliGothick/rustfmt-check@master
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          flags: --all
          args: --config-path=./.cargo-husky/hooks/rustfmt.toml

  clippy:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@nightly
        with:
          components: clippy
      - uses: giraffate/clippy-action@v1
        with:
          reporter: 'github-pr-review'
          github_token: ${{ secrets.GITHUB_TOKEN }}
          clippy_flags: -- -Dwarning

  deny:
    name: Run cargo-deny
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: EmbarkStudios/cargo-deny-action@v2
        with:
          rust-version: stable
          log-level: warn
          command: check
          arguments: --all-features

  test:
    needs: [ rustfmt, clippy, deny ]
    name: "Test: { target: ${{ matrix.os }}, channel: ${{ matrix.rust }} }"
    runs-on: ${{matrix.os}}
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-latest, macos-latest, windows-latest ]
        rust: [ stable ]
        include:
          - os: ubuntu-latest
            target: unknown-linux-musl
          - os: macos-latest
            target: apple-darwin
          - os: windows-latest
            target: pc-windows-msvc

    env:
      RUST_BACKTRACE: full
      RUSTV: ${{ matrix.rust }}

    steps:
      - uses: actions/checkout@v4

      - name: Setup Rust ${{ matrix.rust }}
        uses: dtolnay/rust-toolchain@stable

      - name: Cache cargo registry
        uses: actions/cache@v4
        continue-on-error: false
        with:
          path: |
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            ~/.cache/sccache/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-

      - uses: mozilla-actions/sccache-action@v0.0.7
        with:
          version: "v0.9.1"
      - run: |
          echo "SCCACHE_GHA_ENABLED=true" >> $GITHUB_ENV
          echo "RUSTC_WRAPPER=sccache" >> $GITHUB_ENV
      - name: Configure Cache Env
        uses: actions/github-script@v6
        with:
          script: |
            core.exportVariable('ACTIONS_CACHE_URL', process.env.ACTIONS_CACHE_URL || '');
            core.exportVariable('ACTIONS_RUNTIME_TOKEN', process.env.ACTIONS_RUNTIME_TOKEN || '');

      - name: Run test suite
        run: cargo test --all-features
